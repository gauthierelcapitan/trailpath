version: '3.9'

services:
  app:
    container_name: trail_path_app
    hostname: trail-path-app
    image: trail-path-app
    build:
      context: .
      dockerfile: apps/app/Dockerfile
      target: development
    expose:
      - 4200
    networks:
      - trail-path-network
    depends_on:
      - api
    volumes:
      - .:/app
      - /app/node_modules
      - dist:/app/dist
    labels:
      - "traefik.http.routers.app.rule=Host(`app.traefik.me`)"
      - "traefik.http.routers.app-tls.tls.domains[0].main=app.traefik.me"
      - "traefik.http.routers.app-tls.tls.domains[0].sans=app-*.traefik.me"
    command: pnpm run start:app

  api:
    container_name: trail_path_api
    hostname: trail-path-api
    image: trail-path-api
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: development
    volumes:
      - .:/app
      - /app/node_modules
      - dist:/app/dist
    expose:
      - 3333
    labels:
      - "traefik.http.routers.api.rule=Host(`api.traefik.me`)"
      - "traefik.http.routers.api-tls.tls.domains[0].main=api.traefik.me"
      - "traefik.http.routers.api-tls.tls.domains[0].sans=api-*.traefik.me"
    command: pnpm run build:api &&  pnpm run start:api
    networks:
      - trail-path-network

  traefik:
    container_name: trail_path_traefik
    restart: unless-stopped
    image: traefik:latest
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - trail-path-network

  reverse-proxy-https-helper:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik

networks:
  trail-path-network:
    driver: bridge

volumes:
  certs:
  dist:


